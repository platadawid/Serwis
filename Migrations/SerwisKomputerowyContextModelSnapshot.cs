// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Serwis.Models;

#nullable disable

namespace Serwis.Migrations
{
    [DbContext(typeof(SerwisKomputerowyContext))]
    partial class SerwisKomputerowyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Serwis.Models.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("Serwis.Models.Naprawa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataNaprawy")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Koszt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.Property<int>("SerwisId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SerwisId");

                    b.ToTable("Naprawy");
                });

            modelBuilder.Entity("Serwis.Models.Serwiss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataZgloszenia")
                        .HasColumnType("TEXT");

                    b.Property<int>("KlientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KlientId");

                    b.ToTable("Serwisy");
                });

            modelBuilder.Entity("Serwis.Models.Sprzet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .HasColumnType("TEXT");

                    b.Property<int>("SerwisId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SerwisId");

                    b.ToTable("Sprzety");
                });

            modelBuilder.Entity("Serwis.Models.Naprawa", b =>
                {
                    b.HasOne("Serwis.Models.Serwiss", "Serwis")
                        .WithMany()
                        .HasForeignKey("SerwisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serwis");
                });

            modelBuilder.Entity("Serwis.Models.Serwiss", b =>
                {
                    b.HasOne("Serwis.Models.Klient", "Klient")
                        .WithMany("Serwisy")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("Serwis.Models.Sprzet", b =>
                {
                    b.HasOne("Serwis.Models.Serwiss", "Serwis")
                        .WithMany()
                        .HasForeignKey("SerwisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serwis");
                });

            modelBuilder.Entity("Serwis.Models.Klient", b =>
                {
                    b.Navigation("Serwisy");
                });
#pragma warning restore 612, 618
        }
    }
}
